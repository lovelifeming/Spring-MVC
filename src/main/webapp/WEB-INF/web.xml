<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1">

    <display-name>SpringMVC</display-name>
    <description>Spring MVC Demo</description>

    <!-- 1.编码过滤器 -->
    <filter>
        <filter-name>characterEncodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>characterEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!-- 2.配置DispatcherServlet -->
    <servlet>
        <servlet-name>SpringMVC</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <!-- 配置springMVC需要加载的配置文件-->
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:spring/spring-mvc.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
        <async-supported>true</async-supported>
    </servlet>
    <servlet-mapping>
        <servlet-name>SpringMVC</servlet-name>
        <!--  默认匹配所有的请求，此处也可以配置成 *.do 形式 -->
        <url-pattern>/</url-pattern>
    </servlet-mapping>
    <!--默认首页-->
    <welcome-file-list>
        <welcome-file>index.jsp</welcome-file>
    </welcome-file-list>
    <session-config>
        <!--设置session超时时间  单位：分钟 Tomcat中Session的默认超时时间为20分钟-->
        <session-timeout>60</session-timeout>
    </session-config>

    <!--   /****cas配置******/ -->
    <!-- 与CAS Single Sign Out Filter配合，注销登录信息 -->
    <!--<listener>
        <listener-class>org.jasig.cas.client.session.SingleSignOutHttpSessionListener</listener-class>
    </listener>
    &lt;!&ndash; CAS Server 通知 CAS Client，删除session,注销登录信息 &ndash;&gt;
    <filter>
        <filter-name>CAS Single Sign Out Filter</filter-name>
        <filter-class>org.jasig.cas.client.session.SingleSignOutFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>CAS Single Sign Out Filter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    &lt;!&ndash; CAS Client向CAS Server进行ticket验证 &ndash;&gt;
    <filter>
        <filter-name>CAS Validation Filter</filter-name>
        <filter-class>org.jasig.cas.client.validation.Cas20ProxyReceivingTicketValidationFilter</filter-class>
        <init-param>
            <param-name>casServerUrlPrefix</param-name>
            <param-value>&lt;!&ndash;http://cas.youjiao.tjxddfdfqjy.com/cas&ndash;&gt;</param-value>
        </init-param>
        <init-param>
            <param-name>serverName</param-name>
            <param-value>&lt;!&ndash;http://xxpt.yodfdfujiao.tjxqjy.com&ndash;&gt;</param-value>
        </init-param>
    </filter>

    <filter-mapping>
        <filter-name>CAS Validation Filter</filter-name>
        <url-pattern>&lt;!&ndash;/system/login/fm.jsp&ndash;&gt;</url-pattern>
    </filter-mapping>

    &lt;!&ndash; 登录认证，未登录用户导向CAS Server进行认证 &ndash;&gt;
    <filter>
        <filter-name>CAS Filter</filter-name>
        <filter-class>org.jasig.cas.client.authentication.AuthenticationFilter</filter-class>
        <init-param>
            <param-name>casServerLoginUrl</param-name>
            <param-value>&lt;!&ndash;http://cas.youjiao.tjxqjdcfdy.com/cas/login&ndash;&gt;</param-value>
        </init-param>
        <init-param>
            <param-name>serverName</param-name>
            <param-value>&lt;!&ndash;http://xxpt.youdfdjiao.1tssjxqjy.com&ndash;&gt;</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>CAS Filter</filter-name>
        <url-pattern>/system/login/fm.jsp</url-pattern>
    </filter-mapping>

    &lt;!&ndash; 封装request, 支持getUserPrincipal等方法 &ndash;&gt;
    <filter>
        <filter-name>CAS HttpServletRequest Wrapper Filter</filter-name>
        <filter-class>org.jasig.cas.client.util.HttpServletRequestWrapperFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>CAS HttpServletRequest Wrapper Filter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    &lt;!&ndash; 存放Assertion到ThreadLocal中 &ndash;&gt;
    <filter>
        <filter-name>CAS Assertion Thread Local Filter</filter-name>
        <filter-class>org.jasig.cas.client.util.AssertionThreadLocalFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>CAS Assertion Thread Local Filter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>-->

</web-app>